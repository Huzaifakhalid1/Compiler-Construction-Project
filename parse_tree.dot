digraph ParseTree {
  node0 [label="Program"];
  node1 [label="StatementList"];
  node0 -> node1;
  node2 [label="Statement"];
  node1 -> node2;
  node3 [label="MATRIX"];
  node2 -> node3;
  node4 [label="ID: A"];
  node2 -> node4;
  node5 [label="="];
  node2 -> node5;
  node6 [label="Matrix"];
  node2 -> node6;
  node7 [label="RowList"];
  node6 -> node7;
  node8 [label="Row"];
  node7 -> node8;
  node9 [label="["];
  node8 -> node9;
  node10 [label="NumList"];
  node8 -> node10;
  node11 [label="NUM: 1"];
  node10 -> node11;
  node12 [label=","];
  node10 -> node12;
  node13 [label="NumList"];
  node10 -> node13;
  node14 [label="NUM: 2"];
  node13 -> node14;
  node15 [label="]"];
  node8 -> node15;
  node16 [label=","];
  node7 -> node16;
  node17 [label="RowList"];
  node7 -> node17;
  node18 [label="Row"];
  node17 -> node18;
  node19 [label="["];
  node18 -> node19;
  node20 [label="NumList"];
  node18 -> node20;
  node21 [label="NUM: 3"];
  node20 -> node21;
  node22 [label=","];
  node20 -> node22;
  node23 [label="NumList"];
  node20 -> node23;
  node24 [label="NUM: 4"];
  node23 -> node24;
  node25 [label="]"];
  node18 -> node25;
  node26 [label=";"];
  node2 -> node26;
}
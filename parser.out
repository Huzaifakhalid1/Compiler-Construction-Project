Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement statement_list
Rule 3     statement_list -> statement
Rule 4     statement -> MATRIX ID EQUALS matrix SEMICOLON
Rule 5     statement -> MATRIX ID EQUALS ID op ID SEMICOLON
Rule 6     op -> PLUS
Rule 7     op -> MINUS
Rule 8     op -> TIMES
Rule 9     op -> DIVIDE
Rule 10    statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON
Rule 11    statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON
Rule 12    statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON
Rule 13    matrix -> LBRACKET row_list RBRACKET
Rule 14    row_list -> row COMMA row_list
Rule 15    row_list -> row
Rule 16    row -> LBRACKET num_list RBRACKET
Rule 17    num_list -> NUM COMMA num_list
Rule 18    num_list -> NUM

Terminals, with rules where they appear

COMMA                : 14 17
DETERMINANT          : 11 12
DIVIDE               : 9
EQUALS               : 4 5 10 11 12
ID                   : 4 5 5 5 10 10 11 11 12 12
LBRACKET             : 13 16
LPAREN               : 10 11 12
MATRIX               : 4 5 10 11
MINUS                : 7
NUM                  : 17 18
PLUS                 : 6
RBRACKET             : 13 16
RPAREN               : 10 11 12
SCALAR               : 12
SEMICOLON            : 4 5 10 11 12
TIMES                : 8
TRANSPOSE            : 10
error                : 

Nonterminals, with rules where they appear

matrix               : 4
num_list             : 16 17
op                   : 5
program              : 0
row                  : 14 15
row_list             : 13 14
statement            : 2 3
statement_list       : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement statement_list
    (3) statement_list -> . statement
    (4) statement -> . MATRIX ID EQUALS matrix SEMICOLON
    (5) statement -> . MATRIX ID EQUALS ID op ID SEMICOLON
    (10) statement -> . MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON
    (11) statement -> . MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON
    (12) statement -> . SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON

    MATRIX          shift and go to state 4
    SCALAR          shift and go to state 5

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .

    $end            reduce using rule 1 (program -> statement_list .)


state 3

    (2) statement_list -> statement . statement_list
    (3) statement_list -> statement .
    (2) statement_list -> . statement statement_list
    (3) statement_list -> . statement
    (4) statement -> . MATRIX ID EQUALS matrix SEMICOLON
    (5) statement -> . MATRIX ID EQUALS ID op ID SEMICOLON
    (10) statement -> . MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON
    (11) statement -> . MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON
    (12) statement -> . SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON

    $end            reduce using rule 3 (statement_list -> statement .)
    MATRIX          shift and go to state 4
    SCALAR          shift and go to state 5

    statement                      shift and go to state 3
    statement_list                 shift and go to state 6

state 4

    (4) statement -> MATRIX . ID EQUALS matrix SEMICOLON
    (5) statement -> MATRIX . ID EQUALS ID op ID SEMICOLON
    (10) statement -> MATRIX . ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON
    (11) statement -> MATRIX . ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 7


state 5

    (12) statement -> SCALAR . ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 8


state 6

    (2) statement_list -> statement statement_list .

    $end            reduce using rule 2 (statement_list -> statement statement_list .)


state 7

    (4) statement -> MATRIX ID . EQUALS matrix SEMICOLON
    (5) statement -> MATRIX ID . EQUALS ID op ID SEMICOLON
    (10) statement -> MATRIX ID . EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON
    (11) statement -> MATRIX ID . EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON

    EQUALS          shift and go to state 9


state 8

    (12) statement -> SCALAR ID . EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON

    EQUALS          shift and go to state 10


state 9

    (4) statement -> MATRIX ID EQUALS . matrix SEMICOLON
    (5) statement -> MATRIX ID EQUALS . ID op ID SEMICOLON
    (10) statement -> MATRIX ID EQUALS . TRANSPOSE LPAREN ID RPAREN SEMICOLON
    (11) statement -> MATRIX ID EQUALS . DETERMINANT LPAREN ID RPAREN SEMICOLON
    (13) matrix -> . LBRACKET row_list RBRACKET

    ID              shift and go to state 11
    TRANSPOSE       shift and go to state 13
    DETERMINANT     shift and go to state 14
    LBRACKET        shift and go to state 15

    matrix                         shift and go to state 12

state 10

    (12) statement -> SCALAR ID EQUALS . DETERMINANT LPAREN ID RPAREN SEMICOLON

    DETERMINANT     shift and go to state 16


state 11

    (5) statement -> MATRIX ID EQUALS ID . op ID SEMICOLON
    (6) op -> . PLUS
    (7) op -> . MINUS
    (8) op -> . TIMES
    (9) op -> . DIVIDE

    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20
    DIVIDE          shift and go to state 21

    op                             shift and go to state 17

state 12

    (4) statement -> MATRIX ID EQUALS matrix . SEMICOLON

    SEMICOLON       shift and go to state 22


state 13

    (10) statement -> MATRIX ID EQUALS TRANSPOSE . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 23


state 14

    (11) statement -> MATRIX ID EQUALS DETERMINANT . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 24


state 15

    (13) matrix -> LBRACKET . row_list RBRACKET
    (14) row_list -> . row COMMA row_list
    (15) row_list -> . row
    (16) row -> . LBRACKET num_list RBRACKET

    LBRACKET        shift and go to state 25

    row_list                       shift and go to state 26
    row                            shift and go to state 27

state 16

    (12) statement -> SCALAR ID EQUALS DETERMINANT . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 28


state 17

    (5) statement -> MATRIX ID EQUALS ID op . ID SEMICOLON

    ID              shift and go to state 29


state 18

    (6) op -> PLUS .

    ID              reduce using rule 6 (op -> PLUS .)


state 19

    (7) op -> MINUS .

    ID              reduce using rule 7 (op -> MINUS .)


state 20

    (8) op -> TIMES .

    ID              reduce using rule 8 (op -> TIMES .)


state 21

    (9) op -> DIVIDE .

    ID              reduce using rule 9 (op -> DIVIDE .)


state 22

    (4) statement -> MATRIX ID EQUALS matrix SEMICOLON .

    MATRIX          reduce using rule 4 (statement -> MATRIX ID EQUALS matrix SEMICOLON .)
    SCALAR          reduce using rule 4 (statement -> MATRIX ID EQUALS matrix SEMICOLON .)
    $end            reduce using rule 4 (statement -> MATRIX ID EQUALS matrix SEMICOLON .)


state 23

    (10) statement -> MATRIX ID EQUALS TRANSPOSE LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 30


state 24

    (11) statement -> MATRIX ID EQUALS DETERMINANT LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 31


state 25

    (16) row -> LBRACKET . num_list RBRACKET
    (17) num_list -> . NUM COMMA num_list
    (18) num_list -> . NUM

    NUM             shift and go to state 33

    num_list                       shift and go to state 32

state 26

    (13) matrix -> LBRACKET row_list . RBRACKET

    RBRACKET        shift and go to state 34


state 27

    (14) row_list -> row . COMMA row_list
    (15) row_list -> row .

    COMMA           shift and go to state 35
    RBRACKET        reduce using rule 15 (row_list -> row .)


state 28

    (12) statement -> SCALAR ID EQUALS DETERMINANT LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 36


state 29

    (5) statement -> MATRIX ID EQUALS ID op ID . SEMICOLON

    SEMICOLON       shift and go to state 37


state 30

    (10) statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 38


state 31

    (11) statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 39


state 32

    (16) row -> LBRACKET num_list . RBRACKET

    RBRACKET        shift and go to state 40


state 33

    (17) num_list -> NUM . COMMA num_list
    (18) num_list -> NUM .

    COMMA           shift and go to state 41
    RBRACKET        reduce using rule 18 (num_list -> NUM .)


state 34

    (13) matrix -> LBRACKET row_list RBRACKET .

    SEMICOLON       reduce using rule 13 (matrix -> LBRACKET row_list RBRACKET .)


state 35

    (14) row_list -> row COMMA . row_list
    (14) row_list -> . row COMMA row_list
    (15) row_list -> . row
    (16) row -> . LBRACKET num_list RBRACKET

    LBRACKET        shift and go to state 25

    row                            shift and go to state 27
    row_list                       shift and go to state 42

state 36

    (12) statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 43


state 37

    (5) statement -> MATRIX ID EQUALS ID op ID SEMICOLON .

    MATRIX          reduce using rule 5 (statement -> MATRIX ID EQUALS ID op ID SEMICOLON .)
    SCALAR          reduce using rule 5 (statement -> MATRIX ID EQUALS ID op ID SEMICOLON .)
    $end            reduce using rule 5 (statement -> MATRIX ID EQUALS ID op ID SEMICOLON .)


state 38

    (10) statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 44


state 39

    (11) statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 45


state 40

    (16) row -> LBRACKET num_list RBRACKET .

    COMMA           reduce using rule 16 (row -> LBRACKET num_list RBRACKET .)
    RBRACKET        reduce using rule 16 (row -> LBRACKET num_list RBRACKET .)


state 41

    (17) num_list -> NUM COMMA . num_list
    (17) num_list -> . NUM COMMA num_list
    (18) num_list -> . NUM

    NUM             shift and go to state 33

    num_list                       shift and go to state 46

state 42

    (14) row_list -> row COMMA row_list .

    RBRACKET        reduce using rule 14 (row_list -> row COMMA row_list .)


state 43

    (12) statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 47


state 44

    (10) statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON .

    MATRIX          reduce using rule 10 (statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON .)
    SCALAR          reduce using rule 10 (statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 10 (statement -> MATRIX ID EQUALS TRANSPOSE LPAREN ID RPAREN SEMICOLON .)


state 45

    (11) statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .

    MATRIX          reduce using rule 11 (statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .)
    SCALAR          reduce using rule 11 (statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 11 (statement -> MATRIX ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .)


state 46

    (17) num_list -> NUM COMMA num_list .

    RBRACKET        reduce using rule 17 (num_list -> NUM COMMA num_list .)


state 47

    (12) statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .

    MATRIX          reduce using rule 12 (statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .)
    SCALAR          reduce using rule 12 (statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .)
    $end            reduce using rule 12 (statement -> SCALAR ID EQUALS DETERMINANT LPAREN ID RPAREN SEMICOLON .)

